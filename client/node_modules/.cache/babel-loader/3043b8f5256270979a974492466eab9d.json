{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef\n  // \t.get()\n  // \t.then(snapshot => {\n  // \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  // \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n  // \t})\n  // \t.catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/anthonyvelez/Desktop/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAIA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAmC;AACzC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAGF,aAAa,CAACG,GAAd,EAAjB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA,GAVwC,CAYzC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAED,OAAO,UAAUC,qBAAV,GAAmC;AACzC,QAAMlB,SAAS,CAACO,eAAe,CAACY,uBAAjB,EAA0CX,qBAA1C,CAAf;AACA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync () {\n\tyield console.log('I am fired');\n\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = collectionRef.get();\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\t} catch (error) {\n\t\tyield put(fetchCollectionsFailure(error.message));\n\t}\n\n\t// collectionRef\n\t// \t.get()\n\t// \t.then(snapshot => {\n\t// \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t// \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t// \t})\n\t// \t.catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart () {\n\tyield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}