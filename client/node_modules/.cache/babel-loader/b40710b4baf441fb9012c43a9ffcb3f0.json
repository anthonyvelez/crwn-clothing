{"ast":null,"code":"import { takeLatest, put, all, call, take } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/anthonyvelez/Desktop/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","take","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,oBAAjD;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AAEA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA8B;AACpC,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMX,IAAI,CAACO,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACK,aAAa,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACM,aAAa,CAACY,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,eAAV,CAA2B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA3B,EAA6D;AACnE,MAAI;AACH,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMX,IAAI,CAACO,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACK,aAAa,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACflB,IAAAA,GAAG,CAACM,aAAa,CAACY,KAAD,CAAd,CAAH;AACA;AACD;AAED,OAAO,UAAUM,mBAAV,GAAiC;AACvC,QAAMzB,UAAU,CAACK,eAAe,CAACqB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACA;AAED,OAAO,UAAUgB,kBAAV,GAAgC;AACtC,QAAM3B,UAAU,CAACK,eAAe,CAACuB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACA;AAED,OAAO,UAAUS,SAAV,GAAuB;AAC7B,QAAM3B,GAAG,CAAC,CACTC,IAAI,CAACsB,mBAAD,CADK,EAETtB,IAAI,CAACwB,kBAAD,CAFK,CAAD,CAAT;AAIA","sourcesContent":["import { takeLatest, put, all, call, take } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.action';\n\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument\n} from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle () {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail ({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n\t} catch (error) {\n\t\tput(signInFailure(error));\n\t}\n}\n\nexport function* onGoogleSignInStart () {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart () {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas () {\n\tyield all([\n\t\tcall(onGoogleSignInStart),\n\t\tcall(onEmailSignInStart)\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}