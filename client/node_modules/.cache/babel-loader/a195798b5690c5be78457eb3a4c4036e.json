{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyCgA3s7l1gkOZqa-VfDvjXI5fKOzbysqKg',\n  authDomain: 'crwn-db-d6ac5.firebaseapp.com',\n  databaseURL: 'https://crwn-db-d6ac5.firebaseio.com',\n  projectId: 'crwn-db-d6ac5',\n  storageBucket: 'crwn-db-d6ac5.appspot.com',\n  messagingSenderId: '250567083266',\n  appId: '1:250567083266:web:093e86891b6ad093d8ee1b'\n};\nexport const createUserProfileDocument = async (userAuth, ...additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionsAndItems = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/anthonyvelez/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","addCollectionsAndItems","collectionKey","objectsToAdd","collectionRef","collection","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAc,yCADN;AAEdC,EAAAA,UAAU,EAAU,+BAFN;AAGdC,EAAAA,WAAW,EAAS,sCAHN;AAIdC,EAAAA,SAAS,EAAW,eAJN;AAKdC,EAAAA,aAAa,EAAO,2BALN;AAMdC,EAAAA,iBAAiB,EAAG,cANN;AAOdC,EAAAA,KAAK,EAAe;AAPN,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiB,GAAGC,cAApB,KAAuC;AAC/E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAI,CAACA,QAAQ,CAACI,MAAd,EAAsB;AACrB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBZ,QAA/B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACH,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,SAHiB;AAIjB,WAAGZ;AAJc,OAAZ,CAAN;AAMA,KAPD,CAOE,OAAOe,KAAP,EAAc;AACfR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACA;AACD;;AAED,SAAOf,OAAP;AACA,CAzBM;AA2BP,OAAO,MAAMgB,sBAAsB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACtE,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYY,aAAZ;AACA,CAHM;AAKP/B,QAAQ,CAACiC,aAAT,CAAuBhC,MAAvB;AAEA,OAAO,MAAMiC,IAAI,GAAGlC,QAAQ,CAACkC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMsB,QAAQ,GAAG,IAAInC,QAAQ,CAACkC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAenC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n\tapiKey            : 'AIzaSyCgA3s7l1gkOZqa-VfDvjXI5fKOzbysqKg',\n\tauthDomain        : 'crwn-db-d6ac5.firebaseapp.com',\n\tdatabaseURL       : 'https://crwn-db-d6ac5.firebaseio.com',\n\tprojectId         : 'crwn-db-d6ac5',\n\tstorageBucket     : 'crwn-db-d6ac5.appspot.com',\n\tmessagingSenderId : '250567083266',\n\tappId             : '1:250567083266:web:093e86891b6ad093d8ee1b'\n};\n\nexport const createUserProfileDocument = async (userAuth, ...additionalData) => {\n\tif (!userAuth) return;\n\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n\tconst snapShot = await userRef.get();\n\n\tconsole.log(snapShot);\n\n\tif (!snapShot.exists) {\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\n\t\ttry {\n\t\t\tawait userRef.set({\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additionalData\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log('error creating user', error.message);\n\t\t}\n\t}\n\n\treturn userRef;\n};\n\nexport const addCollectionsAndItems = (collectionKey, objectsToAdd) => {\n\tconst collectionRef = firestore.collection(collectionKey);\n\tconsole.log(collectionRef);\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}