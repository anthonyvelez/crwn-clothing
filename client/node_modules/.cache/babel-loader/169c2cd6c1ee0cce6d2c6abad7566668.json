{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyCtt-iq6TkANISNFZLE65vpwXWFfJpIRKk',\n  authDomain: 'crwn-db-77ea8.firebaseapp.com',\n  databaseURL: 'https://crwn-db-77ea8.firebaseio.com',\n  projectId: 'crwn-db-77ea8',\n  storageBucket: 'crwn-db-77ea8.appspot.com',\n  messagingSenderId: '229289620849',\n  appId: '1:229289620849:web:b4fda7b6811954a078f2d0'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n  }\n\n  try {\n    await userRef.set({\n      displayName,\n      email,\n      createdAt,\n      ...additionalData\n    });\n  } catch (error) {\n    console.log('error creating user', error.message);\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/anthonyvelez/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAc,yCADN;AAEdC,EAAAA,UAAU,EAAU,+BAFN;AAGdC,EAAAA,WAAW,EAAS,sCAHN;AAIdC,EAAAA,SAAS,EAAW,eAJN;AAKdC,EAAAA,aAAa,EAAO,2BALN;AAMdC,EAAAA,iBAAiB,EAAG,cANN;AAOdC,EAAAA,KAAK,EAAe;AAPN,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OACxCC,QADwC,EAExCC,cAFwC,KAGpC;AACJ,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACrB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA;;AAED,MAAI;AACH,UAAMV,OAAO,CAACW,GAAR,CAAY;AACjBJ,MAAAA,WADiB;AAEjBC,MAAAA,KAFiB;AAGjBC,MAAAA,SAHiB;AAIjB,SAAGV;AAJc,KAAZ,CAAN;AAMA,GAPD,CAOE,OAAOa,KAAP,EAAc;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACA;AACD,CAxBM;AA0BP3B,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n\tapiKey            : 'AIzaSyCtt-iq6TkANISNFZLE65vpwXWFfJpIRKk',\n\tauthDomain        : 'crwn-db-77ea8.firebaseapp.com',\n\tdatabaseURL       : 'https://crwn-db-77ea8.firebaseio.com',\n\tprojectId         : 'crwn-db-77ea8',\n\tstorageBucket     : 'crwn-db-77ea8.appspot.com',\n\tmessagingSenderId : '229289620849',\n\tappId             : '1:229289620849:web:b4fda7b6811954a078f2d0'\n};\n\nexport const createUserProfileDocument = async (\n\tuserAuth,\n\tadditionalData\n) => {\n\tif (!userAuth) return;\n\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n\tconst snapShot = await userRef.get();\n\n\tif (!snapShot.exists) {\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\t}\n\n\ttry {\n\t\tawait userRef.set({\n\t\t\tdisplayName,\n\t\t\temail,\n\t\t\tcreatedAt,\n\t\t\t...additionalData\n\t\t});\n\t} catch (error) {\n\t\tconsole.log('error creating user', error.message);\n\t}\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}